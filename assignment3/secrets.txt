To use secrets, I created a <value>-secret.yaml files in each of the k8 directorys with the secret information and added *secret.yaml to .gitignore.

To base64 encode the values, I ran the following command 'echo -n <value> | base64'

---------------------------------------------------------------------------------------
For db:

I added a db/k8/mysql-secret.yaml 

apiVersion: v1
kind: Secret
metadata:
  name: mysql-info
data:
  root-password: dGhpc2lzYXRlc3R0aGluZy4=
  database: R2lmdENhcmRTaXRl

then updated db/k8/db-deployment.yaml to reference the secret

           env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-info
                  key: root-password

            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-info
                  key: database

---------------------------------------------------------------------------------------

For GiftCardSite:

I copied the mysql-secret.yaml from db/k8 to GiftCardSite/k8 and then updated the django-deploy.yaml to reference the secrets.

This was done in the same way as above. I did also add an entry in GiftCardSite/k8/mysql-secret.yaml for allowed-hosts.

Then I went to update the python files to use the environment variables, a lot of variables like MYSQL_ROOT_PASSWORD were already updated to use environment variable.

settings.py

- ALLOWED_HOSTS - Commented line 29 and uncommented line 30-32 and set ALLOWED_HOSTS= instead of ALLOWED_HOSTS.extends

#ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS_ENV = os.environ.get('ALLOWED_HOSTS')
if ALLOWED_HOSTS_ENV:
    ALLOWED_HOSTS=(ALLOWED_HOSTS_ENV.split(','))

When reviewing settings.py decided to add a django-generic-secret.yaml to include SECRET_KEY and RANDOM_SEED so neither would be pushed to repo anymore. I then added them to django-deploy.yaml

            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                    name: django-generic
                    key: secret-key

            - name: RANDOM_SEED
              valueFrom:
                secretKeyRef:
                    name: django-generic
                    key: random-seed

and updated settings.py to reference the environment variable, also update reference for MySQl DB

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# Random Seed for testing
RANDOM_SEED = base64.b64decode(os.environ.get('RANDOM_SEED'))

'NAME': os.environ.get('MYSQL_DATABASE'),

I did not find any exposed secrets in views.py and I did not see any references to ADMIN_UNAME and ADMIN_PASS. I'm leaving for now in case it will be used later.



